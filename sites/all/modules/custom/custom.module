<?php 

function custom_form_alter(&$form, &$form_state, $form_id) {
  if($form_id == 'uc_order_view_update_form') {
    $form['#submit'][] = 'custom_order_form_updater';
  }
  if($form_id == 'node_delete_confirm') {
    $type = $form_state['build_info']['args'][0]->type;
    if($type == 'product') {
      $form['#submit'][] = 'custom_stock_form_updater';
    }
  }
}

function custom_stock_form_updater($form, &$form_state) {
  $form_state['redirect']  = 'admin/store/custom_stock';
}

function custom_order_form_updater($form, &$form_state) {
  $orderId = $form['order_id']['#value'];
  $orderStatus = db_query("SELECT order_status FROM {uc_orders} WHERE order_id = :id", array(':id' => $orderId))->fetchField(); //completed OR canceled
  $orderProducts = db_query("SELECT nid, qty FROM {uc_order_products} WHERE order_id = :id ", array(':id' => $orderId))->fetchAll();
  foreach($orderProducts as $item): 
    $id = $item->nid;
    $qty = $item->qty;
    $sku = db_query("SELECT model FROM {uc_products} WHERE nid = :nid", array(':nid' => $id))->fetchField();
    $nowStok = db_query("SELECT stock FROM {uc_product_stock} WHERE sku = :sku", array(':sku' => $sku))->fetchField();
    $nowTresHold = db_query("SELECT threshold FROM {uc_product_stock} WHERE sku = :sku", array(':sku' => $sku))->fetchField();
    $status = db_query("SELECT active FROM {uc_product_stock} WHERE sku = :sku", array(':sku' => $sku))->fetchField();

    if($status == 0) {
      if($orderStatus == 'completed') {
        drupal_set_message("Склад обновлен!");
        custom_update_stock($sku, $nowStok - $qty);
        custom_update_stock_threshold($sku, 0);
        custom_update_stock_active(1, $sku);
      }
    }
    if($status == 1) {
      if($orderStatus == 'canceled') {
        drupal_set_message("Склад обновлен!");
        custom_update_stock($sku, $nowStok + $qty);
        custom_update_stock_threshold($sku, 0);
        custom_update_stock_active(0, $sku);
      }
    }
    if($orderStatus == 'processing') {
      drupal_set_message("Склад обновлен!");
      custom_update_stock_threshold($sku, $qty);
    } 
    
  endforeach;
}

function custom_update_stock($sku, $qty) {
  db_update('uc_product_stock')
    ->fields(array('stock' => $qty))
    ->condition('sku', $sku)
    ->execute();
}

function custom_update_stock_threshold($sku, $qty) {
  db_update('uc_product_stock')
    ->fields(array('threshold' => $qty))
    ->condition('sku', $sku)
    ->execute();
}


function custom_update_stock_active($arg, $sku) {
  db_update('uc_product_stock')
    ->fields(array('active' => $arg))
    ->condition('sku', $sku)
    ->execute();
}

function custom_menu() {
  $items = array();
  $items['node/%node/edit/price'] = array(
    'title' => 'Изменить цену',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('custom_page_form'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK
  );
  return $items;
}


function custom_page_form($form, $form_state) {
  $nid = arg(1);
  $sell_price = db_query("SELECT sell_price FROM {uc_products} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
  $sell_price = $sell_price;
  $list_price = db_query("SELECT list_price FROM {uc_products} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
  $list_price = $list_price;

  $stock = db_query("SELECT stock FROM {uc_product_stock} WHERE nid = :nid", array(':nid' => $nid))->fetchField();


  $form = array();
  $form['list_price'] = array(
    '#type' => 'uc_price',
    '#title' => t('List Price'),
    '#size' => 20,
    '#required' => false,
    '#default_value' => $list_price
  );
  $form['sell_price'] = array(
    '#type' => 'uc_price',
    '#title' => t('Sell price'),
    '#size' => 20,
    '#required' => TRUE,
    '#default_value' => $sell_price
  );
  $form['stock'] = array(
    '#type' => 'textfield',
    '#title' => t('Stock'),
    '#size' => 20,
    '#required' => TRUE,
    '#default_value' => $stock
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

function custom_page_form_submit($form, &$form_state) {
  $nid = arg(1);
  $sell_price = $form_state['values']['sell_price'];
  $list_price  = $form_state['values']['list_price'];
  $sell_price = $sell_price;
  $list_price = $list_price;
  $stock = $form_state['values']['stock'];
  $sku = db_query("SELECT model FROM {uc_products} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
  $active = db_query("SELECT active FROM {uc_product_stock} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
  $threshold = db_query("SELECT threshold FROM {uc_product_stock} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
  if(!$active || $active == 0) {$active = 0;}
  if(!$threshold || $threshold == 0) {$threshold = 0;}

  db_update('uc_products')
    ->fields(array(
      'sell_price' => $sell_price , 
      'list_price' => $list_price
    ))
    ->condition('nid', $nid)
    ->execute();

    db_merge('uc_product_stock')
      ->key(array('sku' => $sku))
      ->updateFields(array(
        'active' => $active,
        'stock' => $stock,
        'threshold' => $threshold,
      ))
      ->insertFields(array(
        'sku' => $sku,
        'active' => $active,
        'stock' => $stock,
        'threshold' => $threshold,
        'nid' => $nid,
      ))
      ->execute();

   drupal_set_message('Данные по наличию успешно обновлены!'); 
  $form_state['redirect'] = 'admin/store/custom_stock';
}


function custom_stock_count($id) {
  $stock = db_query("SELECT stock FROM {uc_product_stock} WHERE nid = :nid", array(':nid' => $id))->fetchField();
  if($stock) {
    print '<div class="in-stock">Товар: <b class="green">в наличии</b></div>';
  } else {
    print '<div class="in-stock no">Наличие: <b class="red">нет в наличии</b></div>';
  }
}



?>